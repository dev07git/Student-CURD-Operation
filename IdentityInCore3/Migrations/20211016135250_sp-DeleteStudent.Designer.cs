// <auto-generated />
using System;
using IdentityInCore3.DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IdentityInCore3.DAL.Migrations
{
    [DbContext(typeof(Core3DBContext))]
    [Migration("20211016135250_sp-DeleteStudent")]
    partial class spDeleteStudent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityInCore3.DAL.Models.Students", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("IdentityInCore3.DAL.Models.SubjectMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("SubjectMaster");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTimeOffset(new DateTime(2021, 10, 16, 13, 52, 49, 903, DateTimeKind.Unspecified).AddTicks(841), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Math"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTimeOffset(new DateTime(2021, 10, 16, 13, 52, 49, 903, DateTimeKind.Unspecified).AddTicks(1664), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hindi"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTimeOffset(new DateTime(2021, 10, 16, 13, 52, 49, 903, DateTimeKind.Unspecified).AddTicks(1674), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "EVS"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedOn = new DateTimeOffset(new DateTime(2021, 10, 16, 13, 52, 49, 903, DateTimeKind.Unspecified).AddTicks(1678), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "English"
                        });
                });

            modelBuilder.Entity("IdentityInCore3.DAL.Models.Subjects", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<float>("Marks")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubjectMasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectMasterId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("IdentityInCore3.DAL.Models.Subjects", b =>
                {
                    b.HasOne("IdentityInCore3.DAL.Models.Students", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Subjects_Students")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IdentityInCore3.DAL.Models.SubjectMaster", "SubjectMaster")
                        .WithMany("Subjects")
                        .HasForeignKey("SubjectMasterId")
                        .HasConstraintName("FK_Subjects_SubjectMaster")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
